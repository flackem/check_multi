#! @PERL@ -w -I ..
#
# Process Tests via check_multi
# thanks to Ton Voon for his persistency on testing ;)
#

use strict;
use Test::More;
use FindBin;
use lib "$FindBin::Bin";
use NPTest;
use testopts;

my $t;

plan tests => 28;

my $result;
#my $testopts="-s status_dat=status.dat -s dont_be_paranoid=1";
my $testopts=testopts::get_testopts." -s status_dat=status.dat";

#-------------------------------------------------------------------------------
#--- service not found ---------------------------------------------------------
#-------------------------------------------------------------------------------
$result = NPTest->testCmd(
	"@PERL@ ../check_multi $testopts -x 'statusdat [ eins ] = host_not_there:service_not_there'",
);
is(
	$result->return_code, 
	3, 
	"check_multi skips unknown service in status.dat - RC3 - passed"
);
like(
	$result->output,
	'/UNKNOWN - 0 plugins checked,  \[Could not expand host:service host_not_there:service_not_there from status_dat.*/', 
	"output correct - passed"
);

#-------------------------------------------------------------------------------
#--- services all --------------------------------------------------------------
#-------------------------------------------------------------------------------
$result = NPTest->testCmd(
	"@PERL@ ../check_multi $testopts -x 'statusdat [ svc ] = /.*/:/.*/'",
);
is(
	$result->return_code, 
	$result->return_code, 
	"check_multi finds numerous services in status.dat - RC".$result->return_code." - passed"
);
like(
	$result->output,
	'/\d+ plugins checked.*\|check_multi\:\:check_multi\:\:plugins=\d+/s', 
	"services output correct - passed"
);

#-------------------------------------------------------------------------------
#--- service Total Processes ---------------------------------------------------
#-------------------------------------------------------------------------------
$result = NPTest->testCmd(
	"@PERL@ ../check_multi $testopts -x 'statusdat [ svc ] = localhost:Total Processes'",
);
is(
	$result->return_code, 
	$result->return_code, 
	"check_multi finds service in status.dat - RC".$result->return_code." - passed"
);
like(
	$result->output,
	'/OK - 1 plugins checked, 1 ok\n\[ 1\] svc_localhost_Total_Processes PROCS OK.*/s', 
	"service output correct - passed"
);

#-------------------------------------------------------------------------------
#--- service Total Processes REGEX ---------------------------------------------
#-------------------------------------------------------------------------------
$result = NPTest->testCmd(
	"@PERL@ ../check_multi $testopts -x 'statusdat [ svc ] = localhost:/Processes/'",
);
is(
	$result->return_code, 
	$result->return_code, 
	"check_multi finds service with REGEX in status.dat - RC".$result->return_code." - passed"
);
like(
	$result->output,
	'/OK - 1 plugins checked, 1 ok\n\[ 1\] svc_localhost_Total_Processes PROCS OK.*/s', 
	"service output correct - passed"
);

#-------------------------------------------------------------------------------
#--- hosts all -----------------------------------------------------------------
#-------------------------------------------------------------------------------
$result = NPTest->testCmd(
	"@PERL@ ../check_multi $testopts -x 'statusdat [ host ] = /.*/'",
);
is(
	$result->return_code, 
	$result->return_code, 
	"check_multi finds numerous hosts in status.dat - RC".$result->return_code." - passed"
);
like(
	$result->output,
	'/\d+ plugins checked.*\|check_multi\:\:check_multi\:\:plugins=\d+/s', 
	"hosts all output correct - passed"
);

#-------------------------------------------------------------------------------
#--- host localhost ------------------------------------------------------------
#-------------------------------------------------------------------------------
$result = NPTest->testCmd(
	"@PERL@ ../check_multi $testopts -x 'statusdat [ host ] = localhost'",
);
is(
	$result->return_code, 
	$result->return_code, 
	"check_multi finds localhost in status.dat - RC".$result->return_code." - passed"
);
like(
	$result->output,
	'/OK - 1 plugins checked, 1 ok\n\[ 1\] host_localhost PING OK.*/s', 
	"hosts localhost output correct - passed"
);

#-------------------------------------------------------------------------------
#--- host localhost without prefix ---------------------------------------------
#-------------------------------------------------------------------------------
$result = NPTest->testCmd(
	"@PERL@ ../check_multi $testopts -x 'statusdat [ host ] = localhost' -s add_tag_to_list_entries=0",
);
is(
	$result->return_code, 
	$result->return_code, 
	"check_multi finds localhost in status.dat without prefix - RC".$result->return_code." - passed"
);
like(
	$result->output,
	'/OK - 1 plugins checked, 1 ok\n\[ 1\] localhost PING OK.*/s', 
	"hosts localhost without prefix output correct - passed"
);

#-------------------------------------------------------------------------------
#--- host host.is.down with default mapping of RC to $CRITICAL -----------------
#-------------------------------------------------------------------------------
$result = NPTest->testCmd(
	"@PERL@ ../check_multi $testopts -x 'statusdat [ host ] = host.is.down'",
);
is(
	$result->return_code, 
	2,
	"check_multi checks down host in status.dat - RC".$result->return_code." - passed"
);
like(
	$result->output,
	'/CRITICAL - 1 plugins checked, 1 critical \(host_host.is.down\)\n\[ 1\] host_host.is.down CRITICAL.*/s', 
	"hosts host.is.down output correct - passed"
);

#-------------------------------------------------------------------------------
#--- host host.is.down with changed mapping of RC to $WARNING ------------------
#-------------------------------------------------------------------------------
$result = NPTest->testCmd(
	"@PERL@ ../check_multi $testopts -x 'statusdat [ host ] = host.is.down' -s map_host_down_state_to=1",
);
is(
	$result->return_code, 
	1,
	"check_multi checks down host in status.dat - RC".$result->return_code." - passed"
);
like(
	$result->output,
	'/WARNING - 1 plugins checked, 1 warning \(host_host.is.down\)\n\[ 1\] host_host.is.down CRITICAL.*/s', 
	"hosts host.is.down output correct - passed"
);

#-------------------------------------------------------------------------------
#--- host host.is.unreachable with default mapping of RC to $UNKNOWN -----------
#-------------------------------------------------------------------------------
$result = NPTest->testCmd(
	"@PERL@ ../check_multi $testopts -x 'statusdat [ host ] = host.is.unreachable'",
);
is(
	$result->return_code, 
	3,
	"check_multi checks unreachable host in status.dat - RC".$result->return_code." - passed"
);
like(
	$result->output,
	'/UNKNOWN - 1 plugins checked, 1 unknown \(host_host.is.unreachable\)\n\[ 1\] host_host.is.unreachable CRITICAL.*/s', 
	"host host.is.unreachable output correct - passed"
);

#-------------------------------------------------------------------------------
#--- host host.is.unreachable with changed mapping of RC to $CRITICAL ----------
#-------------------------------------------------------------------------------
$result = NPTest->testCmd(
	"@PERL@ ../check_multi $testopts -x 'statusdat [ host ] = host.is.unreachable' -s map_host_unreachable_state_to=2",
);
is(
	$result->return_code, 
	2,
	"check_multi checks unreachable host in status.dat - RC".$result->return_code." - passed"
);
like(
	$result->output,
	'/CRITICAL - 1 plugins checked, 1 critical \(host_host.is.unreachable\)\n\[ 1\] host_host.is.unreachable CRITICAL.*/s', 
	"host host.is.unreachable output correct - passed"
);

#-------------------------------------------------------------------------------
#--- host localhost with macro -------------------------------------------------
#-------------------------------------------------------------------------------
$result = NPTest->testCmd(
	uc("@nagios_name@")."_HOSTNAME=localhost @PERL@ ../check_multi $testopts -x 'statusdat [ host ] = \$HOSTNAME\$'",
);
is(
	$result->return_code, 
	$result->return_code, 
	"check_multi finds \$HOSTNAME\$ (localhost) in status.dat - RC".$result->return_code." - passed"
);
like(
	$result->output,
	#'/OK - 1 plugins checked, 1 ok\n\[ 1\] test_localhost.*PING OK.*\|check_multi\:\:check_multi\:\:plugins=1/s', 
	'/OK - 1 plugins checked, 1 ok\n\[ 1\] host_localhost PING OK.*/s', 
	"hosts localhost with macro output correct - passed"
);

#-------------------------------------------------------------------------------
#--- service_check with hard state OK ------------------------------------------
#-------------------------------------------------------------------------------
$result = NPTest->testCmd(
	"@PERL@ ../check_multi $testopts -x 'statusdat [ eins ] = localhost:SSH' -s use_hard_state=1",
);
is(
	$result->return_code, 
	0,
	"check_multi uses hard state in status.dat - RC".$result->return_code." - passed"
);
like(
	$result->output,
	'/OK - 1 plugins checked, 1 ok\n\[ 1\] eins_localhost_SSH SSH OK.*/s', 
	"RC OK is hard state of localhost:SSH check - passed"
);

#-------------------------------------------------------------------------------
#--- service_check with soft state CRITICAL  -----------------------------------
#-------------------------------------------------------------------------------
$result = NPTest->testCmd(
	"@PERL@ ../check_multi $testopts -x 'statusdat [ eins ] = localhost:SSH' -s use_hard_state=0",
);
is(
	$result->return_code, 
	2,
	"check_multi uses soft state in status.dat - RC".$result->return_code." - passed"
);
like(
	$result->output,
	'/CRITICAL - 1 plugins checked, 1 critical \(eins_localhost_SSH\)\n\[ 1\] eins_localhost_SSH SSH OK.*/s', 
	"RC CRITICAL is soft state of localhost:SSH check - passed"
);
