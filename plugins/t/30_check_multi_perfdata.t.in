#! @PERL@ -w -I ..
#
# Process Tests via check_multi
# thanks to Ton Voon for his persistency on testing ;)
#

use strict;
use Test::More;
use FindBin;
use lib "$FindBin::Bin";
use NPTest;
use testopts;

my $t;

#--- add $libexec_dir to PATH to be sure that plugins will be called from libexec_dir
my $libexec_dir="@libexecdir@";
my $plugin_path="@plugin_path@";
$ENV{PATH}="$libexec_dir:$plugin_path:$ENV{PATH}";

#--- check needed plugins for tests
my @plugins=(
	"echo",
	"@PERL@",
);
foreach my $plugin (@plugins) {
	my $path_to_plugin=`which $plugin`; chomp $path_to_plugin;
	if (! -x "$path_to_plugin") {
		plan skip_all => "tests because component $plugin not found or not executable as \'$path_to_plugin\'";
	}
}

plan tests => 40;

my $result;
#my $testopts="-s dont_be_paranoid=1 -s tmp_dir=/tmp/check_multi";
my $testopts=testopts::get_testopts;
#-------------------------------------------------------------------------------
#--- report option 8 -----------------------------------------------------------
#-------------------------------------------------------------------------------
$result = NPTest->testCmd(
	"@PERL@ ../check_multi $testopts -s report=8 -x 'command [ eins ] = echo \"1|eins=1\"' -x 'command [ zwei ] = echo \"2|zwei=2\"'"
);
is(
	$result->return_code, 
	0, 
	"report option 8 (check_multi perfdata) - RC0"
);
like(
	$result->output,
	'/^OK - 2 plugins checked, 0 critical, 0 warning, 0 unknown, 2 ok\n'.
	'\[ 1\] eins 1\n'.
	'\[ 2\] zwei 2\|check_multi::check_multi::plugins=2 time=\d+\.\d+ eins::echo::eins=1 zwei::echo::zwei=2 $/',
	"output correct"
);

#-------------------------------------------------------------------------------
#--- perfdata tag ::plugin in command ------------------------------------------
#-------------------------------------------------------------------------------
$result = NPTest->testCmd(
	"@PERL@ ../check_multi $testopts -s report=8 -x 'command [ eins::myplugin ] = echo \"1|eins=1\"'"
);
is(
	$result->return_code, 
	0, 
	"perfdata plugin specified by command [ tag::plugin ] - RC0"
);
like(
	$result->output,
	'/^OK - 1 plugins checked, 0 critical, 0 warning, 0 unknown, 1 ok\n'.
	'\[ 1\] eins 1|check_multi::check_multi::plugins=1 time=\d+\.\d+ eins::myplugin::eins=1 $/',
	"output correct"
);

#-------------------------------------------------------------------------------
#--- perfdata tag ::plugin in eeval ---------------------------------------------
#-------------------------------------------------------------------------------
$result = NPTest->testCmd(
	"@PERL@ ../check_multi $testopts -s report=8 -x 'eeval [ eins::myplugin ] = \"1|eins=1\"'"
);
is(
	$result->return_code, 
	0, 
	"perfdata plugin specified by eeval [ tag::plugin ] - RC0"
);
like(
	$result->output,
	'/^OK - 1 plugins checked, 0 critical, 0 warning, 0 unknown, 1 ok\n'.
	'\[ 1\] eins 1|check_multi::check_multi::plugins=1 time=\d+\.\d+ eins::myplugin::eins=1 $/',
	"output correct"
);

#-------------------------------------------------------------------------------
#--- perfdata passed through ----------------------------------------------------
#-------------------------------------------------------------------------------
$result = NPTest->testCmd(
	"@PERL@ ../check_multi $testopts -s report=1 -s perfdata_pass_through=1 -x 'eeval [ eins::myplugin ] = \"1|eins=1\"'"
);
is(
	$result->return_code, 
	0, 
	"perfdata passed through in plugin output - RC0"
);
like(
	$result->output,
	'/^OK - 1 plugins checked, 0 critical, 0 warning, 0 unknown, 1 ok\n'.
	'\[ 1\] eins 1|eins=1$/',
	"output correct"
);

#-------------------------------------------------------------------------------
#--- report option 8 with extended_perddata ------------------------------------
#-------------------------------------------------------------------------------
$result = NPTest->testCmd(
	"@PERL@ ../check_multi $testopts -s report=8 -s extended_perfdata=1 -x 'command [ eins ] = echo \"1|eins=1\"' -x 'command [ zwei ] = echo \"2|zwei=2\"'"
);
is(
	$result->return_code, 
	0, 
	"report option 8 (check_multi perfdata) - RC0"
);
like(
	$result->output,
	'/^OK - 2 plugins checked, 0 critical, 0 warning, 0 unknown, 2 ok\n'.
	'\[ 1\] eins 1\n'.
	'\[ 2\] zwei 2\|check_multi::check_multi::plugins=2 time=\d+\.\d+ check_multi_extended::check_multi_extended::count_ok=2 count_warning=0 count_critical=0 count_unknown=0 overall_state=0 eins::echo::eins=1 zwei::echo::zwei=2 $/',
	"output correct"
);

#-------------------------------------------------------------------------------
#--- report option 32 ----------------------------------------------------------
#-------------------------------------------------------------------------------
$result = NPTest->testCmd(
	"@PERL@ ../check_multi $testopts -s report=32 -x 'command [ eins ] = echo \"1|eins=1\"' -x 'command [ zwei ] = echo \"2|zwei=2\"'"
);
is(
	$result->return_code, 
	0, 
	"report option 32 (classical perfdata) - RC0"
);
like(
	$result->output,
	'/^OK - 2 plugins checked, 0 critical, 0 warning, 0 unknown, 2 ok\n'.
	'\[ 1\] eins 1\n'.
	'\[ 2\] zwei 2\|eins=1 zwei=2 $/',
	"output correct"
);
#-------------------------------------------------------------------------------
#--- report option 143 pnp version 0.4 -----------------------------------------
#-------------------------------------------------------------------------------
$result = NPTest->testCmd(
	"@PERL@ ../check_multi $testopts -s report=143 -s pnp_version=0.4 -x 'command [ eins ] = echo \"1|eins=1\"' -x 'command [ zwei ] = echo \"2|zwei=2\"'"
);
is(
	$result->return_code, 
	0, 
	"report option 143 (HTML performance output with PNP 0.4 link) - RC0"
);
like(
	$result->output,
	'/^check_multi OK - 2 plugins checked, 2 ok\n'.
	'.*pnp4nagios\/index.php.*'.
	'.*<img src=.*Show performance chart.*'.
	'.*zwei::echo::zwei=2 $/',
	"output correct"
);

#-------------------------------------------------------------------------------
#--- report option 143 pnp version 0.6 -----------------------------------------
#-------------------------------------------------------------------------------
$result = NPTest->testCmd(
	"@PERL@ ../check_multi $testopts -s report=143 -s pnp_version=0.6 -x 'command [ eins ] = echo \"1|eins=1\"' -x 'command [ zwei ] = echo \"2|zwei=2\"'"
);
is(
	$result->return_code, 
	0, 
	"report option 143 (HTML performance output with PNP 0.6 link) - RC0"
);
like(
	$result->output,
	'/^check_multi OK - 2 plugins checked, 2 ok\n'.
	'.*pnp4nagios\/graph.*'.
	'.*<img src=.*Show performance chart.*'.
	'.*zwei::echo::zwei=2 $/',
	"output correct"
);
#-------------------------------------------------------------------------------
#--- discarding perfdata  ------------------------------------------------------
#-------------------------------------------------------------------------------
$result = NPTest->testCmd(
	"@PERL@ ../check_multi $testopts -s report=1+4+8 -s loose_perfdata=0 -x 'command [ eins ] = echo \"eins|eins=1,1\"'",
);
is(
	$result->return_code, 
	0, 
	"discards invalid perfdata - RC0"
);
like(
	$result->output,
	'/^OK - 1 plugins checked, 1 ok\n'.
	'\[ 1\] eins eins \[eins perfdata discarded for eins: bad UOM \',\' in data \'1,1\' \]\|check_multi::check_multi::plugins=1 time=\d+\.\d+ $/',
	"output correct"
);
#-------------------------------------------------------------------------------
#--- discarding perfdata / duplicate pipe character ----------------------------
#-------------------------------------------------------------------------------
$result = NPTest->testCmd(
	"@PERL@ ../check_multi $testopts -s report=1+4+8 -s loose_perfdata=0 -x 'command [ eins ] = echo \"eins|eins=1|zwei=2\"'",
);
is(
	$result->return_code, 
	0, 
	"discards invalid perfdata with duplicate pipe character - RC0"
);
like(
	$result->output,
	'/^OK - 1 plugins checked, 1 ok\n'.
	'\[ 1\] eins eins \[Invalid perfdata discarded - multiple pipe chars: \'eins=1 PIPE zwei=2\'\]\|check_multi::check_multi::plugins=1 time=\d+\.\d+ $/',
	"output correct"
);
#-------------------------------------------------------------------------------
#--- perfdata with range (1)----------------------------------------------------
#-------------------------------------------------------------------------------
$result = NPTest->testCmd(
	"@PERL@ ../check_multi $testopts -s report=1+4+8 -s loose_perfdata=0 -x 'command [ eins ] = echo \"eins|eins=1;1;1;\"'",
);
is(
	$result->return_code, 
	0, 
	"perfdata with warning / critical number - RC0"
);
like(
	$result->output,
	'/^OK - 1 plugins checked, 1 ok\n'.
	'\[ 1\] eins eins\|check_multi::check_multi::plugins=1 time=\d+\.\d+ eins::echo::eins=1;1;1; $/',
	"output correct"
);
#-------------------------------------------------------------------------------
#--- discarding perfdata - UOM MB/s---------------------------------------------
#-------------------------------------------------------------------------------
$result = NPTest->testCmd(
	"@PERL@ ../check_multi $testopts -s report=1+4+8 -x 'command [ eins ] = echo \"eins|eins=1MB/s\"'",
);
is(
	$result->return_code, 
	0, 
	"discards perfdata with invalid UOM 'MB/s' - RC0"
);
like(
	$result->output,
	'/^OK - 1 plugins checked, 1 ok\n'.
	'\[ 1\] eins eins \[eins perfdata discarded for eins: bad UOM \'MB/s\' in data \'1MB/s\' \]\|check_multi::check_multi::plugins=1 time=\d+\.\d+ $/',
	"output correct"
);
#-------------------------------------------------------------------------------
#--- perfdata with allowed UOM MB ----------------------------------------------
#-------------------------------------------------------------------------------
$result = NPTest->testCmd(
	"@PERL@ ../check_multi $testopts -s report=1+4+8 -x 'command [ eins ] = echo \"eins|eins=1MB\"'",
);
is(
	$result->return_code, 
	0, 
	"perfdata with allowed UOM 'MB' - RC0"
);
like(
	$result->output,
	'/^OK - 1 plugins checked, 1 ok\n'.
	'\[ 1\] eins eins|check_multi::check_multi::plugins=1 time=\d+\.\d+ eins::echo::eins=1MB $/',
	"output correct"
);
#-------------------------------------------------------------------------------
#--- perfdata with allowed UOM % -----------------------------------------------
#-------------------------------------------------------------------------------
$result = NPTest->testCmd(
	"@PERL@ ../check_multi $testopts -s report=1+4+8 -x 'command [ eins ] = echo \"eins|eins=1%\"'",
);
is(
	$result->return_code, 
	0, 
	"perfdata with allowed UOM '%' - RC0"
);
like(
	$result->output,
	'/^OK - 1 plugins checked, 1 ok\n'.
	'\[ 1\] eins eins|check_multi::check_multi::plugins=1 time=\d+\.\d+ eins::echo::eins=1% $/',
	"output correct"
);
#-------------------------------------------------------------------------------
#--- perfdata with range (2)----------------------------------------------------
#-------------------------------------------------------------------------------
$result = NPTest->testCmd(
	"@PERL@ ../check_multi $testopts -s report=1+4+8 -s loose_perfdata=0 -x 'command [ eins ] = echo \"eins|eins=1;1:;1:\"'",
);
is(
	$result->return_code, 
	0, 
	"perfdata with warning / critical range 1: - RC0"
);
like(
	$result->output,
	'/^OK - 1 plugins checked, 1 ok\n'.
	'\[ 1\] eins eins\|check_multi::check_multi::plugins=1 time=\d+\.\d+ eins::echo::eins=1;1:;1: $/',
	"output correct"
);

#-------------------------------------------------------------------------------
#--- perfdata with range (3)----------------------------------------------------
#-------------------------------------------------------------------------------
$result = NPTest->testCmd(
	"@PERL@ ../check_multi $testopts -s report=1+4+8 -s loose_perfdata=0 -x 'command [ eins ] = echo \"eins|eins=1;\~:1;\~:1\"'",
);
is(
	$result->return_code, 
	0, 
	"perfdata with warning / critical range ~:1 - RC0"
);
like(
	$result->output,
	'/^OK - 1 plugins checked, 1 ok\n'.
	'\[ 1\] eins eins\|check_multi::check_multi::plugins=1 time=\d+\.\d+ eins::echo::eins=1;\~:1;\~:1 $/',
	"output correct"
);

#-------------------------------------------------------------------------------
#--- perfdata with range (4)----------------------------------------------------
#-------------------------------------------------------------------------------
$result = NPTest->testCmd(
	"@PERL@ ../check_multi $testopts -s report=1+4+8 -s loose_perfdata=0 -x 'command [ eins ] = echo \"eins|eins=1;\@:1;\@:1\"'", 
);
is(
	$result->return_code, 
	0, 
	"perfdata with warning / critical range \@:1 - RC0"
);
like(
	$result->output,
	'/^OK - 1 plugins checked, 1 ok\n'.
	'\[ 1\] eins eins\|check_multi::check_multi::plugins=1 time=\d+\.\d+ eins::echo::eins=1;\@:1;\@:1 $/',
	"output correct"
);

#-------------------------------------------------------------------------------
#--- perfdata with range (5)----------------------------------------------------
#-------------------------------------------------------------------------------
$result = NPTest->testCmd(
	"@PERL@ ../check_multi $testopts -s report=1+4+8 -s loose_perfdata=0 -x 'command [ eins ] = echo \"eins|eins=1;1:10;\@10:20\"'",
);
is(
	$result->return_code, 
	0, 
	"perfdata with warning / critical range 1:10;\@10:20 - RC0"
);
like(
	$result->output,
	'/^OK - 1 plugins checked, 1 ok\n'.
	'\[ 1\] eins eins\|check_multi::check_multi::plugins=1 time=\d+\.\d+ eins::echo::eins=1;1:10;\@10:20 $/',
	"output correct"
);

#-------------------------------------------------------------------------------
#--- accepting loose German perfdata -------------------------------------------
#-------------------------------------------------------------------------------
my $old_ENV_LANG=$ENV{LANG};
$ENV{LANG}="de_DE";
$result = NPTest->testCmd(
	"@PERL@ ../check_multi $testopts -s report=1+4+8 -s loose_perfdata=1 -x 'command [ eins ] = echo \"eins|eins=1,1\"'",
);
is(
	$result->return_code, 
	0, 
	"accepting loose perfdata - RC0"
);
like(
	$result->output,
	'/^OK - 1 plugins checked, 1 ok\n'.
	'\[ 1\] eins eins\|check_multi::check_multi::plugins=1 time=\d+\.\d+ eins::echo::eins=1\,1 $/',
	"output correct"
);
$ENV{LANG}=$old_ENV_LANG if (defined($old_ENV_LANG));

#-------------------------------------------------------------------------------
#--- accepting trailing semicolon (e.g. nsclient++ -----------------------------
#-------------------------------------------------------------------------------
$result = NPTest->testCmd(
	"@PERL@ ../check_multi $testopts -s report=1+4+8 -s loose_perfdata=1 -x 'command [ eins ] = echo \"eins|eins=1;2;3;4;5;\"'",
);
is(
	$result->return_code, 
	0, 
	"accepting loose perfdata with trailing semicolon - RC0"
);
like(
	$result->output,
	'/^OK - 1 plugins checked, 1 ok\n'.
	'\[ 1\] eins eins\|check_multi::check_multi::plugins=1 time=\d+\.\d+ eins::echo::eins=1\;2\;3\;4\;5\; $/',
	"output correct"
);
